input {
	tcp {
		type => "pfsense"
		port => 5140
	}
	udp {
		type => "pfsense"
		port => 5140
	}
	beats {
		port => 5044
	}
}

filter {
	if [type] == "suricataIDPS" {
		json {
			source => "message"
		}
		date {
			match => [ "timestamp", "ISO8601" ]
		}
		# For Suricata Alerts events set the geoip data based upon the source address
		if [event_type] == "alert" {
			if [src_ip]  {
				geoip {
					source => "src_ip"
					target => "geoip"
					database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
				}
				mutate {
					convert => [ "[geoip][coordinates]", "float" ]
				}
			}
			else if ![geoip.ip] {
 				if [dest_ip]  {
 					geoip {
						source => "dest_ip"
						target => "geoip"
						database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
					}
					mutate {
						convert => [ "[geoip][coordinates]", "float" ]
					}
				}
			}
			# Add additional fields related to the signature
			if [alert][signature] =~ /^ET/ {
				mutate {
					add_tag => [ "ET-Sig" ]
					add_field => [ "ids_rule_type", "Emerging Threats" ]
					add_field => [ "Signature_Info", "http://doc.emergingthreats.net/bin/view/Main/%{[alert][signature_id]}" ]
				}
			}
			if [alert][signature] =~ /^SURICATA/ {
				mutate {
					add_tag => [ "SURICATA-Sig" ]
					add_field => [ "ids_rule_type", "Suricata" ]
				}
			}
		}
	}
}
output {
	# Emit events to stdout for easy debugging of what is going through logstash.
	stdout { codec => rubydebug }

	# This will use elasticsearch to store your logs.
	elasticsearch {
		hosts => [ "localhost:9100" ]
		index => "logstash-%{+YYYY.MM.dd}"
	}
}
